@Tutorial(time: 5) {
    @Intro(title: "Reading DBF Files") {
        Reading DBF files using DBFKit is very easy. You only have one function to execute!
        
        @Image(source: <#file#>, alt: "<#accessible description#>")
    }
    
    @Section(title: "Reading DBF Files") {
        @ContentAndMedia {
            For this chapter, make sure you know how to use the DBFTable class. You should also know how to retrieve all columns and rows of the table using **getColumns** and **getRows**
            
            @Image(source: <#file#>, alt: "<#accessible description#>")
        }
        
        @Steps {
            @Step {
                We will be learning about a new class called **DBFFile**. This class is what will help us read a DBF File.
                
                @Image(source: <#file#>, alt: "<#accessible description#>")
            }
            
            @Step {
                To start with, initialize the DBFFile class with the path to the DBF file like shown in the code
                
                @Code(name: "ReadDBFFile.swift", file: "dbfread example.swift")
            }
            
            @Step {
                Now, in a do-catch block, call the _read_ function.
                
                @Code(name: "ReadDBFFile.swift", file: "dbfread example.swift")
            }
            
            @Step {
                Lastly, assuming no errors occured during the read, just get the table that was read with the **getDBFTable** function
                You can also get other useful information read in the dbf file using the function **getVersion**, **getNumRecords**, and **getLastUpdate**
                
                @Code(name: "ReadDBFFile.swift", file: "dbfread example.swift")
            }
        }
    }
    
    @Section(title: "Reading Memo Fields") {
        @ContentAndMedia {
            You may notice for memo fields how some number is returned (after reading). This number is actually an index (which you should convert to an integer). You see, memo fields are designed to hold string values with a length greater than 254. These strings are stored in a separate file known as a DBT (memo) file.
        }
        
        @Steps {
            @Step {
                After calling the read, in your do-catch block, just convert the string to an int, and call the **readMemo** function to read the data inside the file.
            }
        }
    }
}
